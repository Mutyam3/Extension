1. Importing the packages
2. Exploring the dataset 
  MCAD-SDN dataset 

3. Data processing
	- pandas dataframe
	- Dropping unwanted column

4. Visualization using seaborn & matplotlib
5. Label Encoding using LabelEncoder
6. Feature Selection 
7. Splitting the data X and y for ML
8. Building the model

	KNN
	Decision Tree
	Random FOrest
	Naive BAyes
	Logistic Regression
	Adaboost
	XGBoost
	Stacking Classifier (RF + MLP with LightGBM)
	Voting Classifier (RF + DT)


9. Training and Building the model
10. Flask Framework with Sqlite for signup and signin
11. Importing the packages
12. User gives input as Feature Values 
13. The given input is preprocessed for prediction
14. Trained model is used for prediction
15. Final outcome is displayed through frontend

Extension
----------
In the base paper the author mentioned to different attack detection Dataset for analysis with Machine Learning  models, got 99% of accuracy for Random Forest, 
As an extension we applied an ensemble method  combining the predictions of multiple individual models to produce a more robust and accurate final prediction.
However, we can further enhance the performance by exploring other ensemble techniques such as Voting Classifier and Stacking Classifier got 100% of accuracy 
As an extension we can build the front end using the flask framework for user testing and with user authentication.

